{% extends 'base.html' %}
{% load static %}

{% block content %}
<link rel="stylesheet" href="{% static 'css/styles.css' %}">
    
<div class="container mt-4">
    <h2>Add a New Tip</h2>

    <form method="post">
        {% csrf_token %}

        <!-- Title -->
        <div class="form-group">
            <label for="id_title">Title</label>
            <input type="text" id="id_title" name="title" class="form-control {% if form.title.errors %}is-invalid{% endif %}" placeholder="Enter title" value="{{ form.title.value|default:'' }}" required />
            {% if form.title.errors %}
                <div class="invalid-feedback">
                    {% for error in form.title.errors %}
                        <p>{{ error }}</p>
                    {% endfor %}
                </div>
            {% endif %}
        </div>

        <!-- Content -->
        <div class="form-group">
            <label for="id_content">Content</label>
            <textarea id="id_content" name="content" class="form-control {% if form.content.errors %}is-invalid{% endif %}" rows="5" placeholder="Enter tip content" required>{{ form.content.value|default:'' }}</textarea>
            {% if form.content.errors %}
                <div class="invalid-feedback">
                    {% for error in form.content.errors %}
                        <p>{{ error }}</p>
                    {% endfor %}
                </div>
            {% endif %}
        </div>

        <!-- Image URL -->
        <div class="form-group">
            <label for="id_image_url">Image URL</label>
            <input type="url" id="id_image_url" name="image_url" class="form-control {% if form.image_url.errors %}is-invalid{% endif %}" placeholder="Optional URL for an image" value="{{ form.image_url.value|default:'' }}" />
            {% if form.image_url.errors %}
                <div class="invalid-feedback">
                    {% for error in form.image_url.errors %}
                        <p>{{ error }}</p>
                    {% endfor %}
                </div>
            {% endif %}
        </div>

        <!-- Categories (Dynamic selection) -->
        <div class="form-group">
            <label for="id_categories">Categories</label>
            <select id="id_categories" name="categories" class="form-control select2-multiple" multiple="multiple">
                <!-- Categories will be dynamically loaded and displayed here -->
            </select>
            {% if form.categories.errors %}
                <div class="invalid-feedback">
                    {% for error in form.categories.errors %}
                        <p>{{ error }}</p>
                    {% endfor %}
                </div>
            {% endif %}
        </div>

        <!-- Display selected categories -->
        <div id="category-list" class="mt-2">
            <!-- Dynamically added categories will appear here as badges -->
        </div>

        <!-- Tags -->
        <div class="form-group">
            <label for="id_tags">Tags</label>
            <input type="text" id="id_tags" name="tags" class="form-control" placeholder="Start typing tags" value="{{ form.tags.value|default:'' }}" />
        </div>

        <!-- Tag Management -->
        <div id="tag-list" class="mt-2">
            <!-- Tags will be displayed here dynamically -->
        </div>
        <div class="mt-2">
            <button type="button" id="add-tag-btn" class="btn btn-secondary">Add Tag</button>
        </div>

        <!-- Submit -->
        <button type="submit" class="btn btn-success mt-3">Submit</button>
    </form>
</div>

{% block extra_js %}
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/select2@4.0.13/dist/js/select2.min.js"></script>

<script>
    $(document).ready(function() {
        // Initialize Select2 with AJAX for dynamic category search
        function initSelect2() {
            $('#id_categories').select2({
                placeholder: 'Search for categories',
                minimumInputLength: 1,  // Trigger search after 2 characters
                ajax: {
                    url: '{% url "category_search" %}',  // Django view URL for category search
                    dataType: 'json',
                    delay: 250,  // Wait 250ms after typing before sending request
                    processResults: function(data) {
                        return {
                            results: data.categories.map(function(category) {
                                return {
                                    id: category.id,  // The ID for selection
                                    text: category.name  // The name that will be displayed
                                };
                            })
                        };
                    }
                }
            });
        }

        // Initialize the select2 dropdown on page load
        initSelect2();

        // Handle category selection and add it to the display list
        $('#id_categories').on('change', function() {
            const selectedCategories = $(this).val();
            $('#category-list').empty();  // Clear the current list
            if (selectedCategories) {
                selectedCategories.forEach(function(categoryId) {
                    const categoryName = $('#id_categories option:selected').filter(function() {
                        return $(this).val() === categoryId;
                    }).text();  // Fetch the selected category name
                    $('#category-list').append(`<span class="badge badge-primary mx-1" data-category="${categoryId}">${categoryName} <button type="button" class="btn-close btn-sm remove-category" aria-label="Remove"></button></span>`);
                });
            }
        });

        // Remove category on click
        $('#category-list').on('click', '.remove-category', function() {
            $(this).parent().remove();  // Remove the selected category from the list
            const categoryId = $(this).parent().data('category');
            const currentCategories = $('#id_categories').val();
            const updatedCategories = currentCategories.filter(function(id) {
                return id !== categoryId.toString();
            });
            $('#id_categories').val(updatedCategories).trigger('change');  // Update the Select2 field
        });

        // Collect the selected categories before form submission
        $('form').submit(function() {
            const selectedCategories = [];
            $('#category-list span').each(function() {
                selectedCategories.push($(this).data('category'));
            });
            $('#id_categories').val(selectedCategories).trigger('change'); // Update the hidden categories field
        });
    });
</script>
{% endblock %}
{% endblock %}
